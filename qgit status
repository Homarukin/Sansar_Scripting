[1mdiff --git a/README.md b/README.md[m
[1mindex dae48ea..cc8e73b 100644[m
[1m--- a/README.md[m
[1m+++ b/README.md[m
[36m@@ -18,11 +18,12 @@[m
 	    - 2.2.2- [AGENTPRIVATE AND AGENTPUBLIC](#AGENTPRIVATE-AND-AGENTPUBLIC)[m
 	    - 2.2.3- [CLASSES](#CLASSES)[m
 	    - 2.2.4- [VARIABLES](#VARIABLES)[m
[31m-	    - 2.2.5- [EDITOR PROPERTIES](#EDITOR-PROPERTIES)[m
[31m-	    - 2.2.6- [METHODS](#METHODS)[m
[31m-	    - 2.2.7- [SCRIPT STRUCTURE](#SCRIPT-STRUCTURE)[m
[32m+[m[32m        - 2.2.5- [ARRAYS](#ARRAYS)[m
[32m+[m	[32m    - 2.2.6- [EDITOR PROPERTIES](#EDITOR-PROPERTIES)[m
[32m+[m	[32m    - 2.2.7- [METHODS](#METHODS)[m
[32m+[m	[32m    - 2.2.8- [SCRIPT STRUCTURE](#SCRIPT-STRUCTURE)[m
 - 3.- [START TO PROGRAMMING](#START-TO-PROGRAMMING)[m
[31m-	- 3.1.- [IMPORT](#IMPORT)[m
[32m+[m[32m  - 3.1.- [IMPORT](#IMPORT)[m
   - 3.2.- [ADD A SCRIPT TO AN OBJECT](#ADD-A-SCRIPT-TO-AN-OBJECT)[m
   - 3.3.- [FUNCTION LOG](#FUNCTION-LOG)[m
   	  - 3.3.1- [CREATE A DEBUGGER](#CREATE-A-DEBUGGER)[m
[36m@@ -220,15 +221,17 @@[m [mpublic class ClassNumber2 : SceneObjectScript[m
 [m
 |Variable Types||Example|[m
 |-|-|-|[m
[31m-|`string`|Used to store text or a sequence of characters.|text|[m
[32m+[m[32m|`string`|Used to store text or a sequence of characters.|"text"|[m
 |`int`|Used to store integer numbers|5|[m
 |`bool`|Used to store Boolean values (true or false)|true|[m
 |`float`|Used to store floating-point numbers (which approximate real numbers)|1.5f|[m
[32m+[m[32m|`double`|A double is a data type in C language that stores high-precision floating-point data or numbers in computer memory|2.85|[m
 |`Vector`|Used to store a position or direction in three-dimensional space|Vector.Up|[m
 |`Quaternion`|Used to store an orientation in three-dimensional space.|Quaternion.FromAngleAxis()|[m
[32m+[m[32m|`Sansar.Color`|Structure that allows you to access, convert, and parse known colors in the system|1,0.8,0.5,1|[m
 |`Interaction`|This is a variable that is used to represent an interaction between objects in the scene. It can be used to trigger events or actions when objects come into contact with each other.|MyInteraction|[m
[31m-|`ClusterResource`|This is a variable that is used to represent a resource that is shared among multiple objects in the scene. It can be used to store data or assets that are used by multiple objects.|MyInteraction|[m
[31m-|`SoundResource`|This is a variable that is used to represent a sound that is played in the scene. It can be used to play music or sound effects in response to events or actions.|MyInteraction|[m
[32m+[m[32m|`ClusterResource`|This is a variable that is used to represent a resource that is shared among multiple objects in the scene. It can be used to store data or assets that are used by multiple objects.|ClusterResource|[m
[32m+[m[32m|`SoundResource`|This is a variable that is used to represent a sound that is played in the scene. It can be used to play music or sound effects in response to events or actions.|SoundResource|[m
 [m
 ````csharp[m
 public class Variables : SceneObjectScript[m
[36m@@ -241,6 +244,29 @@[m [mpublic class Variables : SceneObjectScript[m
 [m
     #endregion[m
 }[m
[32m+[m[32m````[m
[32m+[m[32m [` â–² BACK TO TOP` ](#CONTENT-TABLE)[m
[32m+[m
[32m+[m[32m### ARRAYS[m
[32m+[m
[32m+[m[32mIn `Sansar` we have a limit of properties to which we can access because we only can access to a maximum of `20` properties for each list, we should consider that `List not work with every variables` because some of them have other functions and only work with one of them[m
[32m+[m
[32m+[m[32m````csharp[m
[32m+[m[32mpublic class ArraysExamples : SceneObjectScript[m
[32m+[m[32m{[m
[32m+[m[32m    #region EditorProperties[m
[32m+[m
[32m+[m[32m        //Public properties[m
[32m+[m[32m            public List<bool> Bools;[m
[32m+[m[32m            public List<int> Ints;[m
[32m+[m[32m            public List<float> Floats;[m
[32m+[m
[32m+[m[32m    #endregion[m
[32m+[m
[32m+[m[32m    public override void Init() {[m
[32m+[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
 ````[m
 [m
  [` â–² BACK TO TOP` ](#CONTENT-TABLE)[m
[36m@@ -493,9 +519,13 @@[m [mpublic class TagName : SceneObjectScript[m
 [m
 We can send two different message to the chat in sansar for example the first is send a message when we know the ID(the number of the player / identifier) and the second case is when we want to sent a message to al of the users in the experience[m
 [m
[32m+[m[32m<H3> MESSAGE TO A SPECIFIC USER </H3>[m
[32m+[m
 > `Specific User Message` this message first we have to the ID of the player that interacted with the object or with the event in other cases.[m
 [m
 ````csharp[m
[32m+[m[32m//Some parts of this code use content from the Sansar Knowledge Base. ï¿½ 2022 Sansar, Inc. Licensed under the Creative Commons Attribution 4.0 International License (license summary available at https://creativecommons.org/licenses/by/4.0/ and complete license terms available at https://creativecommons.org/licenses/by/4.0/legalcode).[m
[32m+[m
 using Sansar;[m
 using Sansar.Script;[m
 using Sansar.Simulation;[m
[36m@@ -534,13 +564,123 @@[m [mpublic class HelloWorld : SceneObjectScript[m
     }[m
 [m
 }[m
[31m-//Some parts of this code use content from the Sansar Knowledge Base. ï¿½ 2022 Sansar, Inc. Licensed under the Creative Commons Attribution 4.0 International License (license summary available at https://creativecommons.org/licenses/by/4.0/ and complete license terms available at https://creativecommons.org/licenses/by/4.0/legalcode).[m
 ````[m
 [m
[32m+[m[32m<H3> MESSAGE TO ALL USERS </H3>[m
[32m+[m
 > `Message to all Users` this case we only have to send the message to all of the players in the experience.[m
 [m
 ````csharp[m
[32m+[m[32m//Some parts of this code use content from the Sansar Knowledge Base. ï¿½ 2022 Sansar, Inc. Licensed under the Creative Commons Attribution 4.0 International License (license summary available at https://creativecommons.org/licenses/by/4.0/ and complete license terms available at https://creativecommons.org/licenses/by/4.0/legalcode).[m
[32m+[m
[32m+[m[32musing Sansar;[m
[32m+[m[32musing Sansar.Script;[m
[32m+[m[32musing Sansar.Simulation;[m
[32m+[m
[32m+[m[32mpublic class HelloWorld : SceneObjectScript[m
[32m+[m[32m{[m
[32m+[m[32m    #region EditorProperties[m
[32m+[m
[32m+[m[32m    //Public Variables[m
[32m+[m[32m        // Public Variables show in the object properties after being added to a script.[m
[32m+[m[32m        [DefaultValue("Click Me!")]     // This interaction will have a default prompt of "Click Me!"[m
[32m+[m[32m        public Interaction MyInteraction;    // An Interaction public property makes the script clickable.[m
[32m+[m
[32m+[m[32m        [Tooltip("Write the message that you want to show")][m[41m [m
[32m+[m[32m        [DisplayName("Message")][m
[32m+[m[32m        [DefaultValue("This is a message for everyone, because someone click on the object :D")][m
[32m+[m[32m        public string message; //variable that contents the message[m
[32m+[m
[32m+[m[32m    #endregion[m
[32m+[m
[32m+[m[32m    // Init() is where the script is setup and is run when the script starts.[m
[32m+[m[32m    public override void Init()[m
[32m+[m[32m    {[m
[32m+[m[32m        // Subscribe to interaction events to do something when the object is clicked.[m
[32m+[m[32m        MyInteraction.Subscribe(OnClick);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void OnClick(InteractionData data)[m
[32m+[m[32m    {[m
[32m+[m[32m        ScenePrivate.Chat.MessageAllUsers(message);[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
[32m+[m[32m````[m
[32m+[m
[32m+[m[32m> `Message to all Users when the experience starts` this case we only have to send the message to all of the players in the experience.[m
[32m+[m
[32m+[m[32m<H3> MODAL MESSAGE</H3>[m
[32m+[m
[32m+[m[32m> `Modal Message` the modal messages show a modal to the avatar that show a message with buttons that have different options[m
[32m+[m
[32m+[m[32m````csharp[m
[32m+[m[32m//Some parts of this code use content from the Sansar Knowledge Base. ï¿½ 2022 Sansar, Inc. Licensed under the Creative Commons Attribution 4.0 International License (license summary available at https://creativecommons.org/licenses/by/4.0/ and complete license terms available at https://creativecommons.org/licenses/by/4.0/legalcode).[m
[32m+[m
[32m+[m[32m//necessary namespaces for the script to work[m
[32m+[m[32musing Sansar;[m
[32m+[m[32musing Sansar.Script;[m
[32m+[m[32musing Sansar.Simulation;[m
[32m+[m
[32m+[m[32mpublic class ModalMessage : SceneObjectScript[m
[32m+[m[32m{[m
[32m+[m[32m    #region EditorProperties[m
[32m+[m
[32m+[m[32m        //Public Variables[m
[32m+[m
[32m+[m[32m            [Tooltip("Write the questions to show")][m[41m [m
[32m+[m[32m            [DisplayName("Question")][m[41m [m
[32m+[m[32m            [DefaultValue("Write your Question")][m
[32m+[m[32m            public string Question;[m
[32m+[m
[32m+[m[32m            [Tooltip("Write the first option")][m[41m [m
[32m+[m[32m            [DisplayName("First Option")][m[41m [m
[32m+[m[32m            [DefaultValue("A")][m
[32m+[m[32m            public string Option1;[m
[32m+[m
[32m+[m[32m            [Tooltip("Write the second option")][m[41m [m
[32m+[m[32m            [DisplayName("Second Option")][m[41m [m
[32m+[m[32m            [DefaultValue("B")][m
[32m+[m[32m            public string Option2;[m
[32m+[m
[32m+[m[32m            [Tooltip("Write the first answer for the questions")][m[41m [m
[32m+[m[32m            [DisplayName("First Answer")][m[41m [m
[32m+[m[32m            [DefaultValue("First Option Result")][m
[32m+[m[32m            public string Answer1;[m
[32m+[m
[32m+[m[32m            [Tooltip("Write the second answer for the questions")][m[41m [m
[32m+[m[32m            [DisplayName("Second Answer")][m[41m [m
[32m+[m[32m            [DefaultValue("Second Option Result")][m
[32m+[m[32m            public string Answer2;[m
[32m+[m[41m            [m
[32m+[m[32m            [DefaultValue("Click Me!")][m
[32m+[m[32m            public Interaction MyInteraction;[m
[32m+[m
[32m+[m[32m    #endregion[m
 [m
[32m+[m[32m    // Init() is where the script is setup and is run when the script starts.[m
[32m+[m[32m    public override void Init()[m
[32m+[m[32m    {[m
[32m+[m[32m        // Subscribe to interaction events to do something when the object is clicked.[m
[32m+[m[32m        MyInteraction.Subscribe(Action);[m
[32m+[m[32m    }[m
[32m+[m
[32m+[m[32m    public void Action(InteractionData data)[m
[32m+[m[32m    {[m
[32m+[m[32m        // Find the agent that clicked.[m
[32m+[m[32m        AgentPrivate agent = ScenePrivate.FindAgent(data.AgentId);[m
[32m+[m
[32m+[m[32m        if (agent != null)[m[41m [m
[32m+[m[32m        {[m[41m   [m
[32m+[m[32m            agent.Client.UI.ModalDialog.Show(Question, Option1, Option2, (opc) =>[m
[32m+[m[32m            {[m
[32m+[m[32m                if (agent.Client.UI.ModalDialog.Response == Answer1)[m
[32m+[m[32m                    agent.SendChat(Answer1);[m
[32m+[m[32m                else[m
[32m+[m[32m                    agent.SendChat(Answer2);[m
[32m+[m[32m            });[m
[32m+[m[32m        }[m
[32m+[m[32m    }[m
[32m+[m[32m}[m
 ````[m
 [m
  [` â–² BACK TO TOP` ](#CONTENT-TABLE)[m
[36m@@ -632,7 +772,6 @@[m [mpublic class NumberCounter : SceneObjectScript[m
         // Private variables[m
 [m
             private float CurrentNumber;[m
[31m-[m
             private bool isIncreasing = true; // a variable that let know the script if the number is increasing[m
 [m
     #endregion[m
[36m@@ -641,25 +780,17 @@[m [mpublic class NumberCounter : SceneObjectScript[m
     {[m
         [m
         CurrentNumber = StartNumber; // we give the start number to the CurrentNumber[m
[31m-[m
         if((StartNumber >= Min)&&(StartNumber <= Max)){ //If we want that the script start we have to check if the start number is a valid number [m
[31m-[m
[31m-            MyInteraction.Subscribe(OnClick); //if the StartNumber is valid the script will call the function OnClick[m
[31m-[m
[32m+[m[32m            MyInteraction.Subscribe(OnClick); //if the Start Number is valid the script will call the function OnClick[m
         }[m
 [m
[31m-    }[m
[31m-[m
     public void OnClick(InteractionData data)[m
     {[m
[31m-        [m
         AgentPrivate agent = ScenePrivate.FindAgent(data.AgentId); //we have to[m
[31m-[m
         // Increase or decrease the angle[m
         if (isIncreasing)[m
         {[m
             CurrentNumber += StepSize;[m
[31m-            if (CurrentNumber >= Max)[m
             {[m
                 isIncreasing = false;[m
             }[m
[36m@@ -672,10 +803,8 @@[m [mpublic class NumberCounter : SceneObjectScript[m
                 isIncreasing = true;[m
             }[m
         }[m
[31m-[m
         string message = $"The current angle is {CurrentNumber} degrees.";[m
         agent.SendChat(message);[m
[31m-[m
     }[m
 }[m
 ````[m
